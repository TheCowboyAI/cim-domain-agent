[package]
name = "cim-domain-agent"
version = "0.1.0"
edition = "2021"

[dependencies]
# Core dependencies
uuid = { version = "1.17", features = ["v4", "serde"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2.0"
tracing = "0.1"
async-trait = "0.1"
bevy = { version = "0.16.1", default-features = false, features = [
    "bevy_pbr",
    "bevy_render",
    "bevy_ui",
    "bevy_text",
    "bevy_asset",
    "bevy_winit",
    "bevy_core_pipeline",
    "bevy_sprite",
    "default_font",
    "png",
    "multi_threaded",
    "bevy_gltf",
    "bevy_scene",
    "bevy_gizmos",
    "x11",
    "wayland",
    "tonemapping_luts",
    "ktx2",
    "zstd",
] }
bevy_egui = "0.31"
chrono = { version = "0.4", features = ["serde"] }

# AI provider dependencies
reqwest = { version = "0.11", features = ["json", "stream"] }
tokio = { version = "1.32", features = ["full"] }
futures = "0.3"

# Vector database dependencies
qdrant-client = { version = "1.12", features = ["download_snapshots"] }

# Domain dependencies
cim-domain = { path = "../cim-domain" }
cim-domain-graph = { path = "../cim-domain-graph" }
cim-domain-conceptualspaces = { path = "../cim-domain-conceptualspaces" }
# Dialog communication happens through NATS events, not direct dependency
cim-infrastructure = { path = "../cim-infrastructure" }

# For semver in metadata component
semver = "1.0"

# Environment variables for API keys
dotenvy = "0.15"

# For colored terminal output in demos
colored = "2.0"

# For async-sync bridge in Bevy demos
crossbeam = "0.8"

# For particle effects in demos
rand = "0.8"

# For terminal UI demos
ratatui = "0.28"

[dev-dependencies]
tracing-subscriber = "0.3"
tokio-test = "0.4"
crossterm = "0.28"
mockall = "0.11"
dotenv = "0.15"
pollster = "0.3"

[[example]]
name = "semantic_search_demo"

[[example]]
name = "production_embeddings_demo"

# AI/ML dependencies (optional for now)
# These will be activated when implementing actual AI integrations
# openai = { version = "0.1", optional = true }
# ollama-rs = { version = "0.1", optional = true }
# candle = { version = "0.3", optional = true }
# ort = { version = "1.15", optional = true }  # ONNX Runtime

[features]
default = []
ai-openai = []
ai-anthropic = []
ai-ollama = []
all-ai-providers = ["ai-openai", "ai-anthropic", "ai-ollama"]

[[example]]
name = "ai_agent_demo"
path = "examples/ai_agent_demo.rs"

[[example]]
name = "ai_conceptual_integration_demo"
path = "examples/ai_conceptual_integration_demo.rs"

[[example]]
name = "ai_real_providers_demo"
path = "examples/ai_real_providers_demo.rs"

[[example]]
name = "real_ai_provider_demo"
path = "examples/real_ai_provider_demo.rs"

[[example]]
name = "claude_conversation_demo"
path = "examples/claude_conversation_demo.rs"

[[example]]
name = "claude_dialog_demo"
path = "examples/claude_dialog_demo.rs"

[[example]]
name = "ai_visual_demo"
path = "examples/ai_visual_demo.rs"

[[example]]
name = "ai_visual_demo_simple"
path = "examples/ai_visual_demo_simple.rs"

[[example]]
name = "ai_visual_bevy_demo"
path = "examples/ai_visual_bevy_demo.rs"

[[example]]
name = "ai_graph_analysis_integration"
path = "examples/ai_graph_analysis_integration.rs"

[[example]]
name = "ai_provider_demo_simple"
path = "examples/ai_provider_demo_simple.rs"

[[example]]
name = "claude_advanced_demo"
path = "examples/claude_advanced_demo.rs"

[[example]]
name = "test_all_providers"
path = "examples/test_all_providers.rs"

[[example]]
name = "test_ollama_only"
path = "examples/test_ollama_only.rs"

[[example]]
name = "interactive_ai_graph_demo"
path = "examples/interactive_ai_graph_demo.rs"

[[example]]
name = "interactive_chat_demo"
path = "examples/interactive_chat_demo.rs"

[[example]]
name = "simple_bevy_graph_demo"
path = "examples/simple_bevy_graph_demo.rs"

[[example]]
name = "cim_3d_graph_demo"
path = "examples/cim_3d_graph_demo.rs"

[[example]]
name = "interactive_bevy_demo"
path = "examples/interactive_bevy_demo.rs"
