//! Deploy agent command

use cim_domain::Command;
use crate::value_objects::{AgentId, AgentType};

/// Deploy a new agent
#[derive(Debug, Clone)]
pub struct DeployAgent {
    /// Agent's unique ID (generated by caller)
    pub id: AgentId,
    /// Agent type
    pub agent_type: AgentType,
    /// Owner ID (person or organization)
    pub owner_id: uuid::Uuid,
    /// Agent name
    pub name: String,
    /// Agent description
    pub description: Option<String>,
    /// Initial capabilities
    pub initial_capabilities: Vec<String>,
}

impl Command for DeployAgent {
    type Aggregate = crate::aggregate::Agent;

    fn aggregate_id(&self) -> Option<cim_domain::EntityId<Self::Aggregate>> {
        Some(cim_domain::EntityId::from_uuid(self.id.into()))
    }
} 